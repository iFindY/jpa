plugins {
    id 'war'
}
repositories {
    mavenCentral()
}


this.setGroup('de.arkadi')
this.setDescription('my first webb application')
this.defaultTasks('myWar')

sourceSets {
    main {
        java {
            // code
            setSrcDirs(['src/main/java'])
            // web config
            setWebAppDirName('src/main/webapp')
        }
        resources {
            // config
            setSrcDirs(['src/main/resources'])

        }
    }
    test {
        java {
            setSrcDirs(['src/test/java'])
        }
        resources {
            setSrcDirs(['src/test/resources'])
        }
    }
}

dependencies {
    compile('javax:javaee-api:7.0')
    testCompile('junit:junit:4.11')
    compile('org.hibernate:hibernate-core:5.3.7.Final')

    compile('com.fasterxml.jackson.core:jackson-core:2.9.7')
    compile('com.fasterxml.jackson.core:jackson-annotations:2.9.7')
    compile('com.fasterxml.jackson.core:jackson-databind:2.9.7')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7')

    compile('org.eclipse.jetty:jetty-server:9.4.14.v20181114')
    compile('org.eclipse.jetty:jetty-servlets:9.4.14.v20181114')

    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:*"
    compile "org.glassfish.jersey.inject:jersey-hk2:*"
    compile "org.glassfish.jersey.media:jersey-media-json-binding:*"
    compile group: 'org.eclipse.jetty', name: 'jetty-project', version: '9.4.14.v20181114', ext: 'pom'
}

task myWar(type: War) {
    setClasspath(getConfigurations().getByName('compile'))
    setArchivesBaseName("myWar")
    webInf {
        into('classes') {
            from sourceSets.main.java.outputDir
            from sourceSets.main.resources.asFileTree.matching {
                include("**/persistence.xml")
            }
        }
    }
    metaInf {
        manifest {
            attributes 'version': '1.0'
            attributes 'description': 'na description'
            attributes 'creator': 'me'
            attributes 'classifire': 'na'
            attributes 'Class-Path': configurations.compile.files.collect { it.name }.join(' ')
        }
        from sourceSets.main.resources.asFileTree.matching { include("insert.sql") }
    }
}